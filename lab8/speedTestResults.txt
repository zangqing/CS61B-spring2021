 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 10

Enter # strings to insert into hashmap.ULLMap: 100
class hashmap.ULLMap: 0.03 sec

Enter # strings to insert into your hashmap.MyHashMap: 100
class hashmap.MyHashMap: 0.01 sec

Enter # strings to insert into Java's HashMap: 100
Java's Built-in HashMap: 0.00 sec

Enter # strings to insert into hashmap.ULLMap: 10000
class hashmap.ULLMap: 0.30 sec

Enter # strings to insert into your hashmap.MyHashMap: 10000
class hashmap.MyHashMap: 0.01 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.01 sec

Enter # strings to insert into hashmap.ULLMap: 100000
--Stack Overflow -- couldn't add 100000 strings of length 10.

Enter # strings to insert into your hashmap.MyHashMap: 100000
class hashmap.MyHashMap: 0.07 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.01 sec


 This program inserts lexicographically increasing Stringsinto Maps as <String, Integer> pairs.

Enter # strings to insert into hashmap.ULLMap: 1000
class hashmap.ULLMap: 0.02 sec

Enter # strings to insert into hashmap.MyHashMap: 1000
class hashmap.MyHashMap: 0.00 sec

Enter # strings to insert into Java's HashMap: 1000
Java's Built-in HashMap: 0.00 sec

Enter # strings to insert into hashmap.ULLMap: 10000
class hashmap.ULLMap: 0.40 sec

Enter # strings to insert into hashmap.MyHashMap: 10000
class hashmap.MyHashMap: 0.02 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.01 sec

Enter # strings to insert into hashmap.ULLMap: 100000
--Stack Overflow -- couldn't add 100000 strings.

Enter # strings to insert into hashmap.MyHashMap: 100000
class hashmap.MyHashMap: 0.09 sec

Enter # strings to insert into Java's HashMap: 100000
Java's Built-in HashMap: 0.04 sec


 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 10

Enter # strings to insert into each map: 1000
class hashmap.MyHashMapALBuckets: 0.01 sec
class hashmap.MyHashMapLLBuckets: 0.00 sec
class hashmap.MyHashMapTSBuckets: 0.01 sec
class hashmap.MyHashMapHSBuckets: 0.00 sec
class hashmap.MyHashMapPQBuckets: 0.00 sec

Enter # strings to insert into each map: 10000
class hashmap.MyHashMapALBuckets: 0.01 sec
class hashmap.MyHashMapLLBuckets: 0.01 sec
class hashmap.MyHashMapTSBuckets: 0.01 sec
class hashmap.MyHashMapHSBuckets: 0.01 sec
class hashmap.MyHashMapPQBuckets: 0.01 sec

Enter # strings to insert into each map: 100000
class hashmap.MyHashMapALBuckets: 0.06 sec
class hashmap.MyHashMapLLBuckets: 0.05 sec
class hashmap.MyHashMapTSBuckets: 0.07 sec
class hashmap.MyHashMapHSBuckets: 0.07 sec
class hashmap.MyHashMapPQBuckets: 0.07 sec

Enter # strings to insert into each map: 1000000
class hashmap.MyHashMapALBuckets: 0.43 sec
class hashmap.MyHashMapLLBuckets: 0.45 sec
class hashmap.MyHashMapTSBuckets: 0.63 sec
class hashmap.MyHashMapHSBuckets: 0.86 sec
class hashmap.MyHashMapPQBuckets: 0.66 sec


